@page
@model CreditCardModel
@{
    // Usando o ViewModel que criamos anteriormente para ter dados organizados
    var viewModel = Model.ViewModel;
    ViewData["Title"] = $"Pagamento para {viewModel.PlanName}";
}

<link rel="stylesheet" href="~/css/payment/credit_card.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

<div id="credit-card-module" class="payment-module">

    <header class="payment-header">
        <i class="fas fa-shield-alt header-icon"></i>
        <h1>Pagamento 100% Seguro</h1>
    </header>

    <div class="order-summary">
        <p>Você está adquirindo o <strong>@viewModel.PlanName</strong></p>
        <div class="order-total">
            <span>TOTAL</span>
            <strong>@viewModel.FormattedPrice</strong>
        </div>
    </div>

    <div class="brick-container">
        <div id="paymentBrick_container"></div>

        <div id="statusScreenBrick_container"></div>
        
        <div id="loading-container" class="loading-indicator">
            <div class="spinner"></div>
            <p>Carregando o formulário...</p>
        </div>
    </div>

    <div id="error-container" class="error-message"></div>

</div>

<script id="payment-data" type="application/json">
    @Json.Serialize(new 
    {
        publicKey = viewModel.PublicKey,
        planName = viewModel.PlanName,
        amount = viewModel.Price,
        preferenceId = viewModel.PreferenceId, // Será null se for assinatura
        preapprovalPlanId = viewModel.PreapprovalPlanId, // Será null se for pagamento único
        processUrl = Url.Page("/api/credit/card/process-payment", "ProcessPayment"), // URL segura gerada pelo Razor
    })
</script>

<script src="~/js/payment/Credit-Card/credit-card.js" type="module" asp-append-version="true"></script>